{"version":3,"sources":["../../src/main/server.js"],"names":["app","use","express","urlencoded","extended","json","raw","text","router","Router","get","req","res","next","status","success","message","author","github","linkedin"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAyCA;;AAvCA,IAAMA,GAAG,GAAG,0BAAZ;;AAEAA,GAAG,CAACC,GAAJ,CAAQC,oBAAQC,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACAJ,GAAG,CAACC,GAAJ,CAAQC,oBAAQG,IAAR,EAAR;AACAL,GAAG,CAACC,GAAJ,CAAQC,oBAAQI,GAAR,EAAR;AACAN,GAAG,CAACC,GAAJ,CAAQC,oBAAQK,IAAR,EAAR;AACAP,GAAG,CAACC,GAAJ,CAAQ,wBAAO,KAAP,CAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,uBAAR;AACAD,GAAG,CAACC,GAAJ,CAAQ,uCAAR,E,CAA0B;;AAC1BD,GAAG,CAACC,GAAJ,CAAQ,yBAAR,E,CAAmB;;AACnBD,GAAG,CAACC,GAAJ,CAAQ,2BAAR,E,CAAgB;;AAChBD,GAAG,CAACC,GAAJ,CAAQ,sBAAR,E,CAAgB;;AAEhB;AACA;AACA;AACA;;AACA,IAAMO,MAAM,GAAGN,oBAAQO,MAAR,EAAf;;AACAT,GAAG,CAACC,GAAJ,CAAQ,SAAR,EAAmBO,MAAnB;AAEA;AACA;AACA;AAEA;;AACAA,MAAM,CAACE,GAAP,CAAW,GAAX,EAAe,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAmB;AAC9BD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBT,IAAhB,CAAqB;AACjBU,IAAAA,OAAO,EAAE,IADQ;AAEjBC,IAAAA,OAAO,EAAC,0CAFS;AAGjBC,IAAAA,MAAM,EAAE,cAHS;AAIjBC,IAAAA,MAAM,EAAE,gCAJS;AAKjBC,IAAAA,QAAQ,EAAC;AALQ,GAArB;AAOH,CARD,E,CAUA;AACA;AACA;;AAGA,4BAAWX,MAAX","sourcesContent":["import express from 'express'\r\nimport morgan from 'morgan'\r\nimport cors from 'cors';\r\nimport mongoSanitize from 'express-mongo-sanitize';\r\nimport helmet from 'helmet';\r\nimport xss from 'xss-clean';\r\nimport hpp from 'hpp';\r\nimport fs from 'fs';\r\nimport path from 'path';\r\n\r\nconst app = express()\r\n\r\napp.use(express.urlencoded({ extended: true }))\r\napp.use(express.json())\r\napp.use(express.raw())\r\napp.use(express.text())\r\napp.use(morgan('dev'))\r\napp.use(cors())\r\napp.use(mongoSanitize()); //Use for security to prevent NoSql injections\r\napp.use(helmet()); //Adds extra headers to protect the routes\r\napp.use(xss()); //To prevent a harmful script being sent with the POST request\r\napp.use(hpp()); //To prevent HTTP Parameter Pollution.\r\n\r\n/**\r\n * Initiate the Routes\r\n * All Routes to beigin with /api/v1/{the routes}\r\n */\r\nconst router = express.Router();\r\napp.use('/api/v1', router);\r\n\r\n/**\r\n * The Routes\r\n */\r\n\r\n// Default Route\r\nrouter.get('/',(req, res, next) =>{\r\n    res.status(200).json({\r\n        success: true,\r\n        message:\"Welcome to Node.js Rest API Boiler Plate\",\r\n        author: 'Dennis Machu',\r\n        github: 'https://github.com/dennismachu',\r\n        linkedin:'https://linkedin.com/in/dennismachu'\r\n    })\r\n})\r\n\r\n// Routes\r\n// import {route name} from '{route path}'\r\n// {route name}(router)\r\n\r\nimport noteRoutes from './app/notes/notesRoute'\r\nnoteRoutes(router)\r\n\r\nexport {app}\r\n"],"file":"server.js"}