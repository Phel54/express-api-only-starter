{"version":3,"sources":["../../../src/main/logger/index.js"],"names":["logConfiguration","transports","winston","Console","level","format","combine","label","timestamp","printf","warn","message","File","filename","info","logger","createLogger"],"mappings":";;;;;;;;;AAAA;;AACA;AACA,IAAMA,gBAAgB,GAAG;AACrBC,EAAAA,UAAU,EAAE,CACR,IAAIC,oBAAQD,UAAR,CAAmBE,OAAvB,CAA+B;AAC3BC,IAAAA,KAAK,EAAE,MADoB;AAE3BC,IAAAA,MAAM,EAAEH,oBAAQG,MAAR,CAAeC,OAAf,CACJJ,oBAAQG,MAAR,CAAeE,KAAf,CAAqB;AACjBA,MAAAA,KAAK;AADY,KAArB,CADI,EAIJL,oBAAQG,MAAR,CAAeG,SAAf,CAAyB;AACtBH,MAAAA,MAAM,EAAE;AADc,KAAzB,CAJI,EAOJH,oBAAQG,MAAR,CAAeI,MAAf,CAAsB,UAAAC,IAAI;AAAA,uBAAOA,IAAI,CAACN,KAAZ,eAAsBM,IAAI,CAACH,KAA3B,eAAqC,CAACG,IAAI,CAACF,SAAN,CAArC,eAA0DE,IAAI,CAACC,OAA/D;AAAA,KAA1B,CAPI;AAFmB,GAA/B,CADQ,EAaR,IAAIT,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AACxBR,IAAAA,KAAK,EAAE,OADiB;AAExB;AACAS,IAAAA,QAAQ,EAAE;AAHc,GAA5B,CAbQ,EAkBR,IAAIX,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AACxBR,IAAAA,KAAK,EAAE,MADiB;AAExB;AACAC,IAAAA,MAAM,EAAEH,oBAAQG,MAAR,CAAeC,OAAf,CACJJ,oBAAQG,MAAR,CAAeE,KAAf,CAAqB;AACjBA,MAAAA,KAAK;AADY,KAArB,CADI,EAIJL,oBAAQG,MAAR,CAAeG,SAAf,CAAyB;AACtBH,MAAAA,MAAM,EAAE;AADc,KAAzB,CAJI,EAOJH,oBAAQG,MAAR,CAAeI,MAAf,CAAsB,UAAAK,IAAI;AAAA,uBAAOA,IAAI,CAACV,KAAZ,eAAsBU,IAAI,CAACP,KAA3B,eAAqC,CAACO,IAAI,CAACN,SAAN,CAArC,eAA0DM,IAAI,CAACH,OAA/D;AAAA,KAA1B,CAPI,CAHgB;AAYvB;AACFE,IAAAA,QAAQ,EAAE;AAbe,GAA5B,CAlBQ,EAiCR,IAAIX,oBAAQD,UAAR,CAAmBW,IAAvB,CAA4B;AACxBR,IAAAA,KAAK,EAAE,OADiB;AAExB;AACAS,IAAAA,QAAQ,EAAE;AAHc,GAA5B,CAjCQ;AADS,CAAzB;;AA2CA,IAAME,MAAM,GAAGb,oBAAQc,YAAR,CAAqBhB,gBAArB,CAAf;;eAEee,M","sourcesContent":["import winston from 'winston';\r\n// Logger configuration\r\nconst logConfiguration = {\r\n    transports: [\r\n        new winston.transports.Console({\r\n            level: 'warn',\r\n            format: winston.format.combine(\r\n                winston.format.label({\r\n                    label: `â›” `\r\n                }),\r\n                winston.format.timestamp({\r\n                   format: 'MMM-DD-YYYY HH:mm:ss'\r\n               }),\r\n                winston.format.printf(warn => `${warn.level}: ${warn.label}: ${[warn.timestamp]}: ${warn.message}`),\r\n            )\r\n        }),\r\n        new winston.transports.File({\r\n            level: 'error',\r\n            // Create the log directory if it does not exist\r\n            filename: 'src/main/logger/index.log'\r\n        }),\r\n        new winston.transports.File({\r\n            level: 'info',\r\n            //Create a format\r\n            format: winston.format.combine(\r\n                winston.format.label({\r\n                    label: `ðŸ’¡`\r\n                }),\r\n                winston.format.timestamp({\r\n                   format: 'MMM-DD-YYYY HH:mm:ss'\r\n               }),\r\n                winston.format.printf(info => `${info.level}: ${info.label}: ${[info.timestamp]}: ${info.message}`),\r\n            ),\r\n             // Create the log directory if it does not exist\r\n           filename: 'src/main/logger/index.log',\r\n        }),\r\n        new winston.transports.File({\r\n            level: 'debug',\r\n            // Create the log directory if it does not exist\r\n            filename: 'src/main/logger/index.log'\r\n        })\r\n    ],\r\n\r\n   \r\n};\r\nconst logger = winston.createLogger(logConfiguration);\r\n\r\nexport default logger;"],"file":"index.js"}