{"version":3,"sources":["../../../../src/main/app/notes/notesService.js"],"names":["createNotes","title","description","note","Notes","save","viewNote","id","findById","toString","noteData","viewAllNotes","limit","options","page","sort","paginate","err","result","Error","notesData","updateNote","console","log","findByIdAndUpdate","$set","removeNotes","findByIdAndRemove","module","exports"],"mappings":";;;;;;;;AAMC;;AAND;AACA;AACA;AACA;AACA;AAIC;AACA,IAAMA,WAAW;AAAA,2FAAG,iBAAOC,KAAP,EAAaC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB;AACIC,YAAAA,IAFY,GAEL,IAAIC,sBAAJ,CAAU;AACjBH,cAAAA,KAAK,EAAEA,KADU;AAEjBC,cAAAA,WAAW,EAAEA;AAFI,aAAV,CAFK;AAAA;AAAA,mBAMJC,IAAI,CAACE,IAAL,EANI;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAUA;;;AACA,IAAMM,QAAQ;AAAA,4FAAG,kBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACUH,uBAAMI,QAAN,CAAeD,EAAE,CAACE,QAAH,EAAf,CADV;;AAAA;AACPC,YAAAA,QADO;AAAA,8CAENA,QAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARJ,QAAQ;AAAA;AAAA;AAAA,GAAd,C,CAKA;;;AACA,IAAMK,YAAY;AAAA,4FAAG,kBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,OADW,GACD;AACZC,cAAAA,IAAI,EAAE,CADM;AAEZF,cAAAA,KAAK,EAAEA,KAFK;AAGZG,cAAAA,IAAI,EAAC;AAHO,aADC;AAAA;AAAA,mBAMOX,uBAAMY,QAAN,CAAe,EAAf,EAAkBH,OAAlB,EAA0B,UAACI,GAAD,EAAKC,MAAL,EAAc;AAC5D,kBAAID,GAAJ,EAAQ;AACJ,sBAAM,IAAIE,KAAJ,CAAUF,GAAV,CAAN;AACH;;AACD,qBAAOC,MAAP;AACH,aALuB,CANP;;AAAA;AAMXE,YAAAA,SANW;AAAA,8CAYVA,SAZU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZT,YAAY;AAAA;AAAA;AAAA,GAAlB,C,CAeA;;;AACA,IAAMU,UAAU;AAAA,4FAAI,kBAAMd,EAAN,EAASa,SAAT;AAAA;AAAA;AAAA;AAAA;AAChBE,YAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AADgB;AAAA,mBAEHhB,uBAAMoB,iBAAN,CAAwBjB,EAAxB,EAA2B;AAACkB,cAAAA,IAAI,EAACL;AAAN,aAA3B,CAFG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAJ;;AAAA,kBAAVC,UAAU;AAAA;AAAA;AAAA,GAAhB,C,CAMA;;;AACA,IAAMK,WAAW;AAAA,4FAAG,kBAAOnB,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHH,uBAAMuB,iBAAN,CAAwBpB,EAAxB,CADG;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXmB,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAGAE,MAAM,CAACC,OAAP,GAAkB;AACd7B,EAAAA,WAAW,EAAXA,WADc;AAEdM,EAAAA,QAAQ,EAARA,QAFc;AAGdK,EAAAA,YAAY,EAAZA,YAHc;AAIdU,EAAAA,UAAU,EAAVA,UAJc;AAKdK,EAAAA,WAAW,EAAXA;AALc,CAAlB","sourcesContent":["/**\n * Contains module(notes) services. \n * A service object implements the userâ€™s interactions with the application. \n * It contains business logic that describe the connections with your domain objects.\n */\n\n import Notes from './notesModel.js'\n\n // Create\n const createNotes = async (title,description) => {\n     // Create an user object\n     let note = new Notes({\n         title: title,\n         description: description\n     })\n    return await note.save()\n    \n }\n \n // Read\n const viewNote = async (id)=> {\n     const noteData = await Notes.findById(id.toString())\n     return noteData\n }\n \n // Read\n const viewAllNotes = async (limit)=> {\n     const options = {\n         page: 1,\n         limit: limit,\n         sort:'-createdAt'\n       };\n     const notesData = await Notes.paginate({},options,(err,result)=>{\n         if (err){\n             throw new Error(err)\n         }\n         return result\n     })\n     return notesData\n }\n \n // Update\n const updateNote =  async(id,notesData)=>{\n     console.log(notesData);\n     return await Notes.findByIdAndUpdate(id,{$set:notesData})\n }\n \n \n // Delete\n const removeNotes = async (id)=> {\n     return await Notes.findByIdAndRemove(id)\n }\n module.exports =  {\n     createNotes, \n     viewNote, \n     viewAllNotes, \n     updateNote, \n     removeNotes\n};"],"file":"notesService.js"}